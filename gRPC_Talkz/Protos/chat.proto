syntax = "proto3";

option csharp_namespace = "GrpcServer";

package chat;

service Chat {
	rpc Subscribe(Request) returns (stream SubscriberResponse); //added
	rpc Unsubscribe(Request) returns (Empty); //added
	rpc GetUserData(Login) returns (UserDataResponse); // added
	rpc GetUserFriends(Request) returns (stream GetFriendDataResponse); //added
	rpc GetUserChats(Request) returns (stream GetChatDataResponse); //added
	rpc GetChatData(Request) returns (stream MessageToChat);
	rpc PostMessage(Msg) returns (Empty); //added
}

message Empty {

}

message Request {
	int32 id = 1;
}

message SubscriberResponse {
	int32 messageType = 1;
	optional NewChat newChat = 2;
	optional NewMessage newMessage = 3;
	optional NewRequest newRequest = 4;	
	optional NewUserStatus newUserStatus = 5;
	optional RemoveFriend removeFriend = 6;
}

message NewChat {
	int32 newChatId = 1;
	string chatImgB64 = 2;
}

message NewMessage {
	int32 toChatId = 1;
	string username = 2;
	int32 fromId = 3;
	string imageSource = 4;
	int32 toId = 5;
	string text = 6;
	int64 time = 7;
}

message NewRequest {
	GetFriendDataResponse requestData = 1;
}

message NewUserStatus {
	int32 userId = 1;
	int32 userStatus = 2;
}

message RemoveFriend {
	int32 friendId = 1;
}

message Login {
	string loginMail = 1;
	string password = 2;
}

message UserDataResponse {
	int32 myUserid = 1;
	string myUsername = 2;
	int32 myUsernameId = 3;
	string myProfileImgB64 = 4;
}

message GetChatDataResponse {	
	int32 chatId = 1;
	bool isListed = 2;
	string chatImgB64 = 3;
	string chatName = 4;
}

message GetFriendDataResponse {
	int32 friendId = 1;
	bool isFriend = 2;
	string friendImgB64 = 3;
}

message Msg {
	int32 chatId = 1;
	int32 fromId = 2;
	string text = 3;	
}

message MessageToChat {
	string username = 1;
	string imageSource = 2;
	int32 fromId = 3;
	string text = 4;
	int64 time = 5;
	bool isEdited = 6;
	bool isRead = 7;
}