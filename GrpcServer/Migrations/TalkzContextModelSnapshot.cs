// <auto-generated />
using System;
using GrpcServer.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrpcServer.Migrations
{
    [DbContext(typeof(TalkzContext))]
    partial class TalkzContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GrpcServer.Entities.Chat", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("userId");

                    b.Property<int>("ChatId")
                        .HasColumnType("int(11)")
                        .HasColumnName("chatId");

                    b.Property<sbyte>("IsListed")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("isListed");

                    b.HasKey("UserId", "ChatId")
                        .HasName("PRIMARY");

                    b.ToTable("chats", (string)null);
                });

            modelBuilder.Entity("GrpcServer.Entities.Friendlist", b =>
                {
                    b.Property<int>("UserId1")
                        .HasColumnType("int(11)")
                        .HasColumnName("userId1");

                    b.Property<int>("UserId2")
                        .HasColumnType("int(11)")
                        .HasColumnName("userId2");

                    b.Property<bool?>("IsFriend")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isFriend")
                        .HasDefaultValueSql("false");

                    b.HasKey("UserId1", "UserId2")
                        .HasName("PRIMARY");

                    b.ToTable("friendlist", (string)null);
                });

            modelBuilder.Entity("GrpcServer.Entities.Message", b =>
                {
                    b.Property<int>("FromId")
                        .HasColumnType("int(11)")
                        .HasColumnName("fromId");

                    b.Property<long>("MessageTimestamp")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("messageTimestamp");

                    b.Property<int>("ChatId")
                        .HasColumnType("int(11)")
                        .HasColumnName("chatId");

                    b.Property<bool?>("IsEdited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isEdited")
                        .HasDefaultValueSql("0");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isRead")
                        .HasDefaultValueSql("0");

                    b.Property<string>("Message1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message");

                    b.HasKey("FromId", "MessageTimestamp")
                        .HasName("PRIMARY");

                    b.ToTable("messages", (string)null);
                });

            modelBuilder.Entity("GrpcServer.Entities.Usercredential", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("userId");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("ProfileImgB64")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasColumnName("profileImgB64")
                        .HasDefaultValueSql("iVBORw0KGgoAAAANSUhEUgAAAMMAAAC9CAIAAACBNV5MAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAPcSURBVHhe7dtBdqNYDAXQ7H8HPe1d9Q769Coayj+J/ys78EFgkrr3vCFIstDUbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/B3/8+DqwVp/Mw8JU4l8VAihMZCjRxGRsCeRN3+euf/yLxQBcOEVueck0x5HvigCLx8GcoE5t9mEuJ2ZZu6D7x4hwKxE4XcwUx0sgZ3RKvz2GX2ObKvFYMM35Gt0SROWwUexzKC8UkLunFYonviXVPiQc+8xIxw9YzuiVKzWFMrO9XYsuReLjlfP0AMeSGRMHWhbVifes+Sbwy52TR/YhLmsJasbiR7xEvzjlT3zpm25wo23qxrF9crHUx8XqreY6+dQy2OVG29WJBbG3/JU05Td83BtucKNt6saDfWux0ZaJIq3y0aFp3SVOicuvIV/qVxUJXJoq0ykfrm8ZIOxPFW0eein3t+B5Rp9U/VN8x5tmZKN468lS/r9jmUKJUq3+ovmPMszNRvHXkqX5fsc2hRKlW/1B9x5hnZ6J468hT/b5im0OJUq3+ofqOMc/ORPHWkaf6fcU2hxKlWv1D9R1jnp2J4q0jT/X7im0OJUq1+ofqO8Y8OxPFW0ee6vcV2xxKlGr1D9V3jHl2Joq3jjwV+9rxPaJOq3+o6Fh6TFG5deQr/cpioSsTRVrlE/R9Y6rNibKtFwv6rcVOVyaKtMon6PvGVJsTZVsvFsTWxr9HvD7nNH3fGGxzomzrxbJ+cbHWxcTrreY5onXFMUXBOawVixv5HvHinJP13WO8DYmCrQtrxfrWfZJ4peVk0X3fMUWpOYyJ9f1KbDkSD7e8RMyw45iiTqvPmFjie2LXU+KBz7xKjLH1kqLIHDaKPQ7ltWKY8WOK1+ewS2xzZa4gRho5pnixhb1ioYu5iJjqPXE0kXj4M5SJzT7M1cR4d4kDmhIPdOEQseUpVxajbgg0cRlDgRQnshh4Km7li8AqcTcfAQAAAAAAAAAAAAAAAAAAKOFfzBT4OCPHxC4uiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiRouiTIuiRr3l+SY2M4lUcMlUcMlUcMlUcMlUSMuaQps5JKo4ZK2sbR0v5Fb+F2s6Pcws5QQC1kTZn/4UuLnbwuzWMqUHyx+aUn4FKuZ8jPEjyoMj8WabvleYvjaMCB2d8tlxZy1Ya9Y6EdeK4YpD/VixZGjRbuDwnli9c+yTRQ5OrxYfI/vEq4oPtLVwvcTn/D88KPE1z0o/HHiAtYHAAAAAAAAAAAAAAAAAAAAAICreXv7H+M2Dc0qcX9UAAAAAElFTkSuQmCC");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("username");

                    b.Property<int>("UsernameId")
                        .HasColumnType("int(11)")
                        .HasColumnName("usernameId");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("usercredentials", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
